#!/usr/bin/env python
import os, sys, distutils.sysconfig, imp

def errMsg():
    return 'perfexp ERROR: Could not set the Python path, please add the perfexp ' \
        + 'installation to the PYTHONPATH environment variable.\n\n' \
        + '\nFull Python path: %s' % sys.path
        
def getperfexpPkgDir():
    """Return the full path to the site-packages directory under the 
    perfexp installation prefix (standard distutils installation).
    
    If 'prefix' is supplied, use it instead of the computed location
    of the installed perfexp script.
    """
    
    prefix = None
    perfexp_execdir = os.path.dirname(os.path.dirname(os.path.realpath(sys.argv[0])))

    # first check whether we are in source tree
    if os.path.exists(os.path.join(perfexp_execdir,'src')):
        prefix = perfexp_execdir
        if os.path.exists(os.path.join(prefix,'src','analysis','metrics')): 
            return os.path.join(prefix, 'src'), prefix
    
    # else look for installed version
    prefix = perfexp_execdir
    if not os.path.exists(os.path.join(prefix,'analysis','metrics')): 
        prefix = None

    if not prefix: return None, None  # give up
    
    libdirname = distutils.sysconfig.get_config_var('LIB')
    if libdirname is None: 
        # True for python versions < 2.5
        libdirname = 'lib'
    thedir =  os.path.join(prefix,libdirname,'python' + distutils.sysconfig.get_python_version(), 'site-packages', 'perfexp')
    newdir=''

    if not os.path.exists(thedir):
        files = []
        # Look for the parent of site-packages
        for file in os.listdir(prefix):
            fulldir = os.path.join(prefix, file)
            if os.path.isdir(fulldir):
                for x in os.listdir(fulldir):
                    if os.path.isdir(os.path.join(fulldir,x)):
                        if x.startswith('python' + distutils.sysconfig.get_python_version()):
                            fulldir = os.path.join(fulldir, x)
                        elif x == 'python': 
                            fulldir = os.path.join(fulldir, x)
                        else: continue
                        for y in os.listdir(fulldir):
                            if y == 'site-packages':
                                newdir =  os.path.join(fulldir, 'site-packages', 'perfexp')
                                break 
            if newdir: 
                thedir = newdir
                break
    
    if not os.path.exists(thedir):
        sys.stderr.write(errMsg())
        sys.exit(1)

    theparent = os.path.dirname(thedir)
    return (thedir, theparent)

def setPythonPath():

    # Set the python path
    (perfexpPath, perfexpParent) = getperfexpPkgDir()
   
    if perfexpPath and os.path.exists(perfexpPath): 
        sys.path.append(perfexpParent)
        sys.path.append(perfexpPath)
        sys.path.append(os.path.join(perfexpPath,'examples'))
    
    
    if 'PERFEXP_DEBUG' in os.environ.keys():
        if os.environ['PERFEXP_DEBUG'] == "1":
            sys.stderr.write('The perfexp module directory is %s\n' % perfexpPath)
            sys.stderr.write('Full Python path: %s\n' % sys.path)


    try:
        from analysis.interfaces import AbstractModel
    except:
        sys.stderr.write(errMsg())
        sys.exit(1)
        
    return [perfexpPath, perfexpParent]
 


if __name__ == "__main__":

    # Self test
    setPythonPath()
    
    if len(sys.argv) < 2:
        sys.stderr.write('Usage: \n\tperfexp <drivermodule>\n\n' \
                         +'The driver module is a Python module in your Python path. ' \
                         +'Some examples are included in perfexp:\n' \
                         + '\tperfexp examples.drivers.ExperimentDriver\n' \
                         + '\tperfexp examples.drivers.DataManagerDriver\n' \
                         + '\tperfexp examples.drivers.AnalysisDriver\n' \
                         + '\tperfexp examples.drivers.ModelDriver\n' \
                        )
        sys.exit(1)
        
    
    # The first argument is the driver script
    driver = sys.argv[1]
    
    # Find the module location of the driver
    modulefile = driver.replace('.',os.sep) + '.py'
    driverdir = None
    for dir in sys.path:
        if os.path.exists(os.path.join(dir,modulefile)):
            driverdir = os.path.join(dir,os.path.dirname(modulefile))
            break
    
    if not driverdir: 
        sys.stderr.write(errMsg())
        sys.exit(1)
        
    drivermod = driver.split('.')[-1]
    modpath = sys.path
    modpath.append(driverdir)
        
    try:
        (file,filename,description) = imp.find_module(drivermod,modpath)
        mod = imp.load_module(drivermod, file, filename, description)
    except RuntimeError,e:
        sys.stderr.write('perfexp ERROR: %s\n' + errMsg())
        sys.exit(1)
        
    mod.main()

